{"ast":null,"code":"// Mixins\nimport { inject as RegistrableInject } from '../registrable';\nexport function factory(namespace, child, parent) {\n  return RegistrableInject(namespace, child, parent).extend({\n    name: 'groupable',\n    props: {\n      activeClass: {\n        type: String,\n        default() {\n          if (!this[namespace]) return undefined;\n          return this[namespace].activeClass;\n        }\n      },\n      disabled: Boolean\n    },\n    data() {\n      return {\n        isActive: false\n      };\n    },\n    computed: {\n      groupClasses() {\n        if (!this.activeClass) return {};\n        return {\n          [this.activeClass]: this.isActive\n        };\n      }\n    },\n    created() {\n      this[namespace] && this[namespace].register(this);\n    },\n    beforeDestroy() {\n      this[namespace] && this[namespace].unregister(this);\n    },\n    methods: {\n      toggle() {\n        this.$emit('change');\n      }\n    }\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\nconst Groupable = factory('itemGroup');\nexport default Groupable;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}