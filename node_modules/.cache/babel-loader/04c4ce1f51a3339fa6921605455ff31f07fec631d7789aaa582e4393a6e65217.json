{"ast":null,"code":"import Vue from 'vue';\nexport function factory(prop = 'value', event = 'change') {\n  return Vue.extend({\n    name: 'proxyable',\n    model: {\n      prop,\n      event\n    },\n    props: {\n      [prop]: {\n        required: false\n      }\n    },\n    data() {\n      return {\n        internalLazyValue: this[prop]\n      };\n    },\n    computed: {\n      internalValue: {\n        get() {\n          return this.internalLazyValue;\n        },\n        set(val) {\n          if (val === this.internalLazyValue) return;\n          this.internalLazyValue = val;\n          this.$emit(event, val);\n        }\n      }\n    },\n    watch: {\n      [prop](val) {\n        this.internalLazyValue = val;\n      }\n    }\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\nconst Proxyable = factory();\nexport default Proxyable;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}