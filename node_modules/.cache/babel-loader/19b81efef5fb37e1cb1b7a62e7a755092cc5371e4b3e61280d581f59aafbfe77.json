{"ast":null,"code":"// Mixins\nimport { inject } from '../../mixins/registrable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport { easeInOutCubic } from '../../services/goto/easing-patterns';\nconst base = inject('VAppBar', 'v-app-bar-title', 'v-app-bar');\nexport default base.extend().extend({\n  name: 'v-app-bar-title',\n  data: () => ({\n    contentWidth: 0,\n    left: 0,\n    width: 0\n  }),\n  watch: {\n    '$vuetify.breakpoint.width': 'updateDimensions'\n  },\n  computed: {\n    styles() {\n      if (!this.contentWidth) return {};\n      const min = this.width;\n      const max = this.contentWidth;\n      const ratio = easeInOutCubic(Math.min(1, this.VAppBar.scrollRatio * 1.5));\n      return {\n        width: convertToUnit(min + (max - min) * ratio),\n        visibility: this.VAppBar.scrollRatio ? 'visible' : 'hidden'\n      };\n    }\n  },\n  mounted() {\n    this.updateDimensions();\n  },\n  methods: {\n    updateDimensions() {\n      const dimensions = this.$refs.placeholder.getBoundingClientRect();\n      this.width = dimensions.width;\n      this.left = dimensions.left;\n      this.contentWidth = this.$refs.content.scrollWidth;\n    }\n  },\n  render(h) {\n    return h('div', {\n      class: 'v-toolbar__title v-app-bar-title'\n    }, [h('div', {\n      class: 'v-app-bar-title__content',\n      style: this.styles,\n      ref: 'content'\n    }, [this.$slots.default]), h('div', {\n      class: 'v-app-bar-title__placeholder',\n      style: {\n        visibility: this.VAppBar.scrollRatio ? 'hidden' : 'visible'\n      },\n      ref: 'placeholder'\n    }, [this.$slots.default])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}