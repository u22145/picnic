{"ast":null,"code":"import axios from \"axios\";\nimport swal from 'sweetalert2';\nimport googleRecapcha from '@/components/googleRecapcha.vue';\nimport popup from '../components/popup';\nimport fromComponents from '../components/fromComponents';\nimport store from '../store/tags';\nexport default {\n  name: 'fromPage',\n  components: {\n    popup,\n    googleRecapcha,\n    fromComponents\n  },\n  props: [],\n  data() {\n    return {\n      isActive: '',\n      tab: null,\n      parentInv_number: '',\n      items: ['電子發票', '傳統發票'],\n      cloudInvoice: '1',\n      //1=手動 ,2=載具 ,3=掃描\n      form: '',\n      gCAPTCHA_token: '',\n      dialog: false,\n      popupIconType: '',\n      popupItem: '',\n      prize: '',\n      inv_number: ''\n    };\n  },\n  computed: {\n    fromTags() {\n      //愛酷標籤\n      return store.state.fromTags;\n    }\n  },\n  methods: {\n    // 顯示popup視窗\n    seePopUp(val, data) {\n      this.dialog = true;\n      this.popupIconType = 'icon' + val;\n      this.popupItem = val;\n      this.isDraw = data.isDraw;\n      this.inv_number = data.inv_number;\n    },\n    // 拿到子層資料\n    getParentData(val) {\n      console.log('拿到子層資料', val);\n      this.form = val;\n      this.googleVerify();\n    },\n    // 打googleRecapcha\n    googleVerify() {\n      this.$refs.googleRecapcha.execute();\n    },\n    // 獲得googleRecapcha 資料\n    getGoogleRecapcha(val) {\n      this.gCAPTCHA_token = val;\n      this.addData();\n    },\n    // 傳資料\n    addData() {\n      var me = this;\n      me.form.inv_type = me.tab + 1;\n      me.form.gCAPTCHA_token = me.gCAPTCHA_token;\n      me.form.cloudInvoice = me.cloudInvoice; //1=手動 ,2=載具 ,3=掃描\n      if (me.form.inv_type == 1) {\n        //電子發票\n        me.url = '/API/AddData_EInvoiceEnrollment/E2B1ED123CD74351911A023587A9DEE0';\n        delete me.form.buyCity; //移除購買城市\n        // 判斷是哪種輸入模式\n        switch (me.cloudInvoice) {\n          case '1':\n            //1=手動 \n            delete me.form.carrierNo; //移除載具手機條碼\n            delete me.form.verifyCode; //移除驗證碼(密碼)\n            delete me.form.scanning; //移除QR Code裡的資料\n            break;\n          case '2':\n            //,2=載具 \n            delete me.form.scanning; //移除QR Code裡的資料\n            delete me.form.inv_randomNumber; //移除隨機碼\n            break;\n          default:\n            //3=掃描\n            delete me.form.carrierNo; //移除載具手機條碼\n            delete me.form.verifyCode; //移除驗證碼(密碼)\n            delete me.form.inv_number; //發票號碼\n            delete me.form.inv_randomNumber; //隨機碼\n            delete me.form.inv_date; //發票日期\n            delete me.form.file_inv_photo; //照片\n            break;\n        }\n      } else {\n        //傳統發票\n        me.url = '/API/AddData_InvoiceEnrollment/F1F603B51C6C4EAEB3927CF7DCC51A06';\n        delete me.form.inv_randomNumber; //隨機碼\n        delete me.form.file_inv_photo; //上傳發票明細\n        delete me.form.carrierNo; //移除載具手機條碼\n        delete me.form.verifyCode; //移除驗證碼(密碼)\n        delete me.form.scanning; //移除QR Code裡的資料\n        delete me.form.carrierNo; //移除載具手機條碼\n        delete me.form.verifyCode; //移除驗證碼(密碼)\n      }\n\n      console.log('this.fff', me.form);\n      var config = {\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${me.$accessToken}`\n        },\n        url: me.$apiUrl + me.url,\n        data: new FormData()\n      };\n      Object.keys(me.form).forEach(key => {\n        switch (key) {\n          case 'buyCity':\n            config.data.append(key, `23春風週_購買地_${me.form[key]}`);\n            break;\n          case 'buyCategory':\n            var newCategory = me.form[key].map(item => {\n              return `23春風週_${item}`;\n            });\n            config.data.append(key, JSON.stringify(newCategory));\n            break;\n          case 'gender':\n            config.data.append(key, `23春風週_性別_${me.form[key]}`);\n            break;\n          case 'liveCity':\n            config.data.append(key, `23春風週_居住地_${me.form[key]}`);\n            break;\n          default:\n            config.data.append(key, me.form[key]);\n            break;\n        }\n      });\n      swal.fire({\n        didOpen: () => {\n          swal.fire({\n            allowOutsideClick: false\n          });\n          swal.showLoading();\n          axios(config).then(res => {\n            var data = res.data;\n            console.log('data', data);\n            if (data && data.success) {\n              this.seePopUp('Check', data.data);\n            } else {\n              console.log('data', data);\n              alert(data.message);\n            }\n          }).catch(err => {\n            console.log(err);\n            alert(\"系統忙碌中，請稍後再試\");\n          }).finally(() => {\n            swal.close();\n          });\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}