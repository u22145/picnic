{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport mixins from '../../util/mixins';\nfunction searchChildren(children) {\n  const results = [];\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index];\n    if (child.isActive && child.isDependent) {\n      results.push(child);\n    } else {\n      results.push(...searchChildren(child.$children));\n    }\n  }\n  return results;\n}\n/* @vue/component */\n\nexport default mixins().extend({\n  name: 'dependent',\n  data() {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true\n    };\n  },\n  watch: {\n    isActive(val) {\n      if (val) return;\n      const openDependents = this.getOpenDependents();\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false;\n      }\n    }\n  },\n  methods: {\n    getOpenDependents() {\n      if (this.closeDependents) return searchChildren(this.$children);\n      return [];\n    },\n    getOpenDependentElements() {\n      const result = [];\n      const openDependents = this.getOpenDependents();\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements());\n      }\n      return result;\n    },\n    getClickableDependentElements() {\n      const result = [this.$el];\n      if (this.$refs.content) result.push(this.$refs.content);\n      if (this.overlay) result.push(this.overlay.$el);\n      result.push(...this.getOpenDependentElements());\n      return result;\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}